<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud on Korean-man in Tokyo</title><link>https://retheviper.github.io/tags/cloud/</link><description>Recent content in Cloud on Korean-man in Tokyo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://retheviper.github.io/tags/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Google Cloud認定Professional Cloud Developerについて</title><link>https://retheviper.github.io/posts/gcp-certification-professional-cloud-developer/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/gcp-certification-professional-cloud-developer/</guid><description>&lt;img src="https://retheviper.github.io/images/gcp.jpg" alt="Featured image of post Google Cloud認定Professional Cloud Developerについて" />&lt;p>この度は&lt;a class="link" href="https://cloud.google.com/certification/cloud-developer" target="_blank" rel="noopener"
>Professional Cloud Developer&lt;/a>の資格を取得しました。去年は特に資格を取得してないので、久々の資格取得となります。今までは主にAWSを使っていたので関連した資格を取得するのが良いかなと思っていましたが、GCPのサービスがもっと知りたいというのもあり、AWSの資格と比べどう違うかも気になったための受験となります。&lt;/p>
&lt;p>前回もそうであったように、無事資格の取得ができましたので、今回のポストではどのように試験の準備をしたかなどについて簡単に述べたいと思います。&lt;/p>
&lt;h2 id="試験はどんな感じか">試験はどんな感じか
&lt;/h2>&lt;p>以前、&lt;a class="link" href="../aws-certification-associate-developer" >AWSの資格&lt;/a>に関する記事を書いたことがありますが、プロバイダが違ってもCloudというプラットフォームが提供するサービスの根本は変わらないので、試験もまたそのような感覚です。基本的にIaaSやPaaSのようなサービスの概念や、バックエンドサービスのクラウドでのデプロイと構成の経験があれば試験の準備はそう難しくないかなと感じました。&lt;/p>
&lt;p>受験は遠隔監視とオンサイト監視の二つを選べ、前者は自宅での受験、後者はテストセンターでの受験となります。自分の場合はオンサイト監視が平日しか選べなかったため遠隔監視を選んでいます。AWSの試験の時もそうでしたが、遠隔監視の場合は受験できる部屋の準備をきちんとする必要があります。準備に必要なものは&lt;a class="link" href="https://kryterion.force.com/support/s/article/Launching-your-Online-exam?language=en_US" target="_blank" rel="noopener"
>KRYTERIONのサイト&lt;/a>に明示されているので、事前にチェックした方が良いです。個人的にはこの要件に合わせて部屋を片付けるのもかなり大変なものだったので、オンサイト監視の方が楽だろうと思いました。&lt;/p>
&lt;p>遠隔監視での試験はKRYTERIONが提供する専用のブラウザを使って進行します。ブラウザが起動すると他のアプリは最小化され、外部モニタを繋いでいる場合はそのモニタの画面が黒くなります。私の場合はApple Silicon Macを使っているので互換性の方が気になりましたが、問題なく実行できました。&lt;a class="link" href="https://www.kryteriononline.com/systemcheck/#" target="_blank" rel="noopener"
>システムチェック&lt;/a>のサイトも提供しているので、自分のPCで受験できるかはこちらでも確認したほうが良いでしょう。また、生体認証情報の登録が必要となりますが、こちらは単純に写真を撮るだけです。当日は試験が始まる前に登録した生体認証を確認し、監視官の指示の元に部屋の様子を見せたり身分証明書を提示するなどの簡単な手続きがあります。&lt;/p>
&lt;p>他の資格の場合はその場や当日で結果がわかるケースも多かったかなと思いますが、GCPの資格は認定のメールが届くまで1週間ほどの時間がかかっています。満点や得点がわからないという特徴を踏まえて考えてみると、受験当時のさまざまな状況を考慮して総合的に判断するのではないかと思っています。受験専用のブラウザを使うことになっているので、おそらくキー入力やカメラの映像なども全部録画されていたのではないかと思います。&lt;/p>
&lt;h2 id="どうやって準備したか">どうやって準備したか
&lt;/h2>&lt;p>まずはUdemyから模擬試験を検索してみました。中には英語になっているものと日本語版がありますが、どれもレビューに書いてある通りで、実際のテストと比べ簡単な問題が多いです。自分の場合は5回分を提供する英語の方を4周してどれも8割以上の正解を記録しましたが、本番ではより難しい（模擬試験では問われてないものやより複雑な）問題が多かったため、これだけでは不十分と思いました。&lt;/p>
&lt;p>模擬試験は&lt;a class="link" href="https://docs.google.com/forms/d/e/1FAIpQLSc_67KaPnNwQrLZ7kuhw-aubz7gMAwY6DQwRJYcW0qlG-iajA/viewform" target="_blank" rel="noopener"
>公式の方&lt;/a>もあり、こちらは比較的に実際のテストに近い問題が多いので（こく一部ですが、ほぼそのままの問題もあります）こちらの方を問題で問われる各サービスのドキュメントを調べながら勉強した方が良いかなと思います。&lt;/p>
&lt;p>模擬試験の他にはKubernetesの問題が多いという情報があり、実際に使ったことがなかったのでそちらを中心に色々調べたことが多かったです。そのほかはテストやデプロイの概念（Blue-Greenやカナリアなど）を一度チェックしているくらいです。&lt;/p>
&lt;h2 id="何を問われるか">何を問われるか
&lt;/h2>&lt;p>&lt;a class="link" href="https://cloud.google.com/certification/guides/cloud-developer/hip-local-case-study?hl=ja" target="_blank" rel="noopener"
>HipLocalのケーススタディ&lt;/a>を参考にして準備をした方が良いです。HipLocalに関する問題自体は全体の割合として高くないものの、このケーススタディを用いた問題の場合は、模擬試験で問われる問題以外でもいろいろなパターンがありますので試験の前にケーススタディに合わせてどうやってマイグレーションを行ったらいいかをGCPのサービスと照らし合わせながら確認した方が良いかと思います。&lt;/p>
&lt;p>一つ、HipLocalのケーススタティを全て覚えておく必要はありません。個人的にはここがかなり気になっていたところなのですが、実際のテストではブラウザの右側にケーススタディが提示されていたのでそれを参考して問題を解くことができました。ブラウザに表示された内容ではHipLocal以外のケーススタディが提示される可能性もあるように書いてありましたが、おそらく他のテストでも似たようなパターンの問題があるためそのような記述があるのかなという感覚です。&lt;/p>
&lt;p>問われる問題の範囲や詳細に対しては他のブログでも見つけることができ、自分としては詳細までは覚えてないので詳しくは述べませんが、やはりKubernetesに関する問題が多い感覚で、次にはストレージやサーバレスに関する問題が多かったかなと思います。そのほか、印象に残ったものは&lt;a class="link" href="https://cloud.google.com/anthos" target="_blank" rel="noopener"
>Anthos&lt;/a>や&lt;a class="link" href="https://istio.io/" target="_blank" rel="noopener"
>istio&lt;/a>が言及された問題があったことです。どちらも名前しか聞いてないくらいだったので、その問題に対しては正解となっているかどうかすらわかりませんでした。&lt;/p>
&lt;h2 id="受かったあとは">受かったあとは
&lt;/h2>&lt;p>Google Cloud Certification Perks Webstoreから特典をもらえるコードがメールで送られてきました。もらえる特典の種類は随時変わるらしく、他のブログではBluetooth Speakerなどをもらえると書いてありましたが、私の場合は以下から選ぶようになっていました。&lt;/p>
&lt;p>&lt;img src="https://retheviper.github.io/posts/gcp-certification-professional-cloud-developer/perk.webp"
width="3292"
height="1996"
srcset="https://retheviper.github.io/posts/gcp-certification-professional-cloud-developer/perk_hu62b8f924135da574ea3abee6a351f569_139956_480x0_resize_q75_h2_box_2.webp 480w, https://retheviper.github.io/posts/gcp-certification-professional-cloud-developer/perk_hu62b8f924135da574ea3abee6a351f569_139956_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="Google Cloud Certification Perks Webstore"
class="gallery-image"
data-flex-grow="164"
data-flex-basis="395px"
>&lt;/p>
&lt;p>私はジッパーフードの方を選びたかったのですが、今回はサイズを2XLしか選べなかったので、今回はジッパーのない方を選んでいます。欲しいものが特になかったら、寄付できるオプションもありますのでそちらを選んでも良いかもですね。&lt;/p>
&lt;p>資格の認証は&lt;a class="link" href="https://www.accredible.com/" target="_blank" rel="noopener"
>Accredible&lt;/a>というサイトから確認できます。こちらのサイトではAWSやOracleの資格を&lt;a class="link" href="https://www.credly.com/" target="_blank" rel="noopener"
>Credly&lt;/a>で確認できたように、認定の証明をサイトにリンクできたり、Linkedinなどに共有できる機能があります。認定書はPDFとしてダウンロードもできました。&lt;/p>
&lt;p>一つ、AWSの場合は資格の有効期限が3年となっていましたが、GCPの場合は2年となっていました。クラウドだとやはりサービスの仕様が変わることも多く、新しいサービスが導入される場合も多いので有効期限を設けていること自体は当たり前とは思いますが、勉強すべき量と受験料($200)を考えると少し短い感覚です。&lt;/p>
&lt;h2 id="最後に">最後に
&lt;/h2>&lt;p>受験後に模擬試験とあまりにも違う問題が多かったため今回こそ落ちたのではないかという不安があり、のちに合格したというメールを受けてもやはり実感があまりありませんでした。ただ、それはあくまで自分が模擬試験で問われるもののみを覚えていただけなのが原因な気もします。&lt;/p>
&lt;p>実際の問題は問題と選択肢を注意深く読むことで正解が見えてくるものもあったり、GCPのドキュメントを確認していたらわかるようなことも多いので、まずは公式の&lt;a class="link" href="https://cloud.google.com/certification/guides/cloud-developer" target="_blank" rel="noopener"
>認定資格ガイド&lt;/a>に提示されてある内容を中心に各サービスのドキュメントを一読することをお勧めします。模擬試験はあくまで模擬試験なので、良い点数が取れたからと油断したら落ちる可能性も十分にあり得るのではないかと思います。&lt;/p>
&lt;p>問題の難易度に関しては、やはりどうしても自分が以前取得したAWSの資格と比較してしまいますが、そちらはアソシエイトレベルのものだったため、こちらの資格の方が難しい感覚ではありました。個人的には合格してからも本当にプロフェッショナルを名乗るにはより勉強が必要なのではないかという気がするくらいでした。ただ、普段からGCPのサービスを色々と利用してオンプレからのマイグレーション経験がある方ならそこまで難しくないのかもしれませんので、油断だけしないなら、十分受かる資格なのではないかなと思っています。&lt;/p>
&lt;p>では、また！&lt;/p></description></item><item><title>AWS認定デベロッパー - アソシエイトについて</title><link>https://retheviper.github.io/posts/aws-certification-associate-developer/</link><pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/aws-certification-associate-developer/</guid><description>&lt;img src="https://retheviper.github.io/images/aws.jpg" alt="Featured image of post AWS認定デベロッパー - アソシエイトについて" />&lt;p>入社してから自分で立てた目標は、年に1つ以上の資格を取ることです。それは自分が元文系出身であって、転職でエンジニアになったので他の人と比べエンジニアとしてのベースとなる知識が足りないからです。なので「何から勉強したら良いかわからない」場合も多く、資格の勉強をしていると少なくとも問われることに対しての勉強はできるので、資格の勉強を頼りにして自分のスキルアップを狙っています。&lt;/p>
&lt;p>そんな中、今回はAWS認定の資格を受験しました。AWS認定資格の種類は以下の画像の通りですが、この中で自分が受験したのはデベロッパー - アソシエイトです。仕事でAWSの基本的なサービス(EC2とS3など)に触れたことがあり、AzureでもFunctionsとQueueによる簡単なサーバレスアプリを作ってみたり、Bastionなどのサービスを使ってみた経験があったので悩まずデベロッパーを選択。なんとか受かりましたが、少し使ってみただけで気安く挑戦するような資格ではなかったと実感しました…&lt;/p>
&lt;p>&lt;img src="https://retheviper.github.io/posts/aws-certification-associate-developer/aws_certifications.webp"
width="2040"
height="1172"
srcset="https://retheviper.github.io/posts/aws-certification-associate-developer/aws_certifications_hu44b471076df28350b7d1968b6d0516db_108712_480x0_resize_q75_h2_box_2.webp 480w, https://retheviper.github.io/posts/aws-certification-associate-developer/aws_certifications_hu44b471076df28350b7d1968b6d0516db_108712_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="AWS Certification"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="417px"
>
&lt;em>出典：AWS公式サイト - &lt;a class="link" href="https://aws.amazon.com/jp/certification/?nc1=h_ls" target="_blank" rel="noopener"
>AWS認定&lt;/a>&lt;/em>&lt;/p>
&lt;p>ともかく、前回の&lt;a class="link" href="../java-se-8-gold" >Java資格の時&lt;/a>でもそうであったように、今回も自分の観点からテストはどうだったかについて簡単に述べていきたいと思います。&lt;/p>
&lt;h2 id="試験はどんな感じか">試験はどんな感じか
&lt;/h2>&lt;p>問題で問われる知識の内容や範囲(AWSのサービスの種類)の側面でなく、テストそのものはどうかというと、学生時代の歴史の科目のような感覚のテストでした。もちろん、テストとは受験者の持っている知識の確認が基本なのであって、AWSのサービスの仕様や特徴などを問われるだろうと推測するのは自然なことだと思います。しかし、実際のテストで問われるのは「このようなアプリを開発するためにはどんなサービスを使って、どのような構成にするべきか？」といった物よりも、「このような要件で、入力すべきCLIのコマンドは何か？」、「この状況下のこのサービスで、〇〇を設定するために使うオプションは何か？」のような、暗記の問題が多い感覚です。例えば、特定のサービスにとある設定をするために使うファイルの「ファイル名」を選ぶような問題があったりします。&lt;/p>
&lt;p>AWSには本当に多様なサービスがあって、それぞれの役割や領域が重なる部分もあるので、サービスの仕様を正確に把握していない場合は設計も開発も難しくなるので、自然に試験もこのような形になるのかも、とは思っています。特に資格のレベルが上がり、アプリケーションの設計という面で考えると、開発の効率やコストの問題も考えなくてはならないので、各サービスの仕様の詳細までを知っておく必要があるでしょう。&lt;/p>
&lt;p>ただ、このようなクラウドサービスの発達により、インフラもコードで書いて構築する時代となっているし、資格も「デベロッパー」なのに、より開発者よりな形の試験にするのはできなかったのかな？と思ったりもしました。例えばLambdaについての問題だとすると、頻繁なアクセスがある場合と処理量の多い場合はそれぞれどの言語で書いた方がいいか、を聞いたりしたらよかったのではないかなと思いました。&lt;/p>
&lt;h2 id="どうやって準備したか">どうやって準備したか
&lt;/h2>&lt;p>自分の場合はアソシエイトの3つの資格の概要をまとめた本を購入しましたが、あくまでAWSのサービスを紹介するものでしかなかったので、&lt;a class="link" href="https://www.udemy.com/" target="_blank" rel="noopener"
>Udemy&lt;/a>で5回分の模擬試験の講座を購入しました。ただ、こちらもデベロッパーをターゲットとしてるよりは、プロフェッショナルレベルの資格の内容も含めているような印象でした。どちらかというとUdemyの模擬試験の方が難しかったと思います。他にもUdemyの模擬試験も複数ありますので、どれを選ぶかによってまた実際のテストで受ける印象は変わってくるのではないかと思います。&lt;/p>
&lt;p>個人的には他の資格もある程度問われる知識に関しては共有する部分が多いと思うので、難易度の高い模擬試験の講座を購入し、繰り返して解いてみることがもっとも効率的ではないかと思います。そうすると他の資格を受験するときに役立つ可能性もあるでしょう。他にもAWSのオンライン動画講座を受講したり(無料ですが、英語版しかないです)、公式のドキュメントを参照したりしていました。AWSの公式の&lt;a class="link" href="https://aws.amazon.com/jp/training/course-descriptions/" target="_blank" rel="noopener"
>トレーニングコース&lt;/a>で動画やPDFの資料を提供していますので、目を通しておくのをオススメします。&lt;/p>
&lt;p>また、プラクティショナから取得されている方にはあまり当てはまらないことなのかもしれませんが、AWSのサービスは略称で呼ばわれることが多く、名称だけではどんなサービスなのか推測が難しいので、少なくとも模擬試験で言及されるサービスに対しては自分の辞書を作っておくのをオススメします。&lt;a class="link" href="https://aws.amazon.com/jp/ebs" target="_blank" rel="noopener"
>EBS&lt;/a>と&lt;a class="link" href="https://aws.amazon.com/jp/efs" target="_blank" rel="noopener"
>EFS&lt;/a>はストレージなのに、&lt;a class="link" href="https://aws.amazon.com/jp/ecs" target="_blank" rel="noopener"
>ECS&lt;/a>はコンテナサービスだったりするので…(他にも、&lt;a class="link" href="https://aws.amazon.com/jp/sqs" target="_blank" rel="noopener"
>SQS&lt;/a>と&lt;a class="link" href="https://aws.amazon.com/jp/sns" target="_blank" rel="noopener"
>SNS&lt;/a>はメッセージングなのに&lt;a class="link" href="https://docs.aws.amazon.com/STS/latest/APIReference/welcome.html" target="_blank" rel="noopener"
>STS&lt;/a>はセキュリティ関連の物だったりします)&lt;/p>
&lt;p>とにかく「覚える」ことがまず大事な資格だと思います。&lt;/p>
&lt;h2 id="何を問われるか">何を問われるか
&lt;/h2>&lt;p>それでは、次は試験の内容です。AWS公式サイトのデベロッパーの&lt;a class="link" href="https://aws.amazon.com/jp/certification/certified-developer-associate/" target="_blank" rel="noopener"
>紹介ページ&lt;/a>を見ると、&lt;strong>推奨される知識と経験&lt;/strong>としていくつか挙げられている項目がありますが、これはあくまで大まかな概念の話であって、実際のテストで具体的に何を問われるかは提示されていません。サンプル問題があるのでそちらを参照することはできますがね。自分の場合は模擬試験を通じて勉強はしたものの、模擬試験のうちどれがデベロッパーに当てはまるかは分かりませんでしたので、AWの公式の模擬試験を購入するのもありかなと思いました。&lt;/p>
&lt;p>とにかく、実際のテストでよく問われれる(デベロッパーとして重要視される)と感じたのは以下のような物です。&lt;/p>
&lt;h3 id="サーバレスアーキテクチャ">サーバレスアーキテクチャ
&lt;/h3>&lt;p>もっとも多かった問題のパターンは、サーバレスアーキテクチャでの開発に関するものです。つまり、&lt;a class="link" href="https://aws.amazon.com/jp/lambda" target="_blank" rel="noopener"
>AWS Lambda&lt;/a>と&lt;a class="link" href="https://aws.amazon.com/jp/dynamodb" target="_blank" rel="noopener"
>Amazon DynamoDB&lt;/a>、もしくは&lt;a class="link" href="https://aws.amazon.com/jp/kinesis/" target="_blank" rel="noopener"
>Amazon Kinesis&lt;/a>の組み合わせでアプリを構築する場合を提示して、そこで注意すべきことや、障害が起きた場合の対処、各種設定方などを問われます。単純にサーバレスがどんな物であるか、を理解しているだけでは十分ではないと思います。なので以上の三つに関しては、詳細まで勉強する必要があります。Lambdaでの依存関係の設定はどうするか、スケーリングを考慮したシャードの設定方法、RCUとWCUのスペックなどを覚えておくといいでしょう。&lt;/p>
&lt;p>また、サーバレス開発をする場合だとしても、エンドポイントやセキュリティ周りのことは一般的なアプリケーション開発(サーバあり)と変わらないので、一般的な開発のパターンで考えるべきところの問題もありました。例えば、&lt;a class="link" href="https://aws.amazon.com/jp/api-gateway" target="_blank" rel="noopener"
>Amazon API Gateway&lt;/a>の設定やS3、CLIコマンドの使い方などがあります。&lt;/p>
&lt;h3 id="セキュリティ">セキュリティ
&lt;/h3>&lt;p>セキュリティに関する問題もあります。主に&lt;a class="link" href="https://aws.amazon.com/jp/iam" target="_blank" rel="noopener"
>IAM&lt;/a>でのポリシー、ロール、グループの設定や、&lt;a class="link" href="https://aws.amazon.com/jp/kms" target="_blank" rel="noopener"
>KMS&lt;/a>を使った暗号化キーのマネージメント、などがあります。Lambdaについての問題があるので、もちろんLambdaオーソライザーに関しての問題もありました。&lt;/p>
&lt;h2 id="ログ監視">ログ・監視
&lt;/h2>&lt;p>アプリケーションに障害が起きた場合での追跡方法や、監視したい要件でどのような設定をすべきかを問われます。例えば&lt;a class="link" href="https://aws.amazon.com/x-ray" target="_blank" rel="noopener"
>X-Ray&lt;/a>デーモンの設定方法や、&lt;a class="link" href="https://aws.amazon.com/jp/cloudwatch" target="_blank" rel="noopener"
>CloudWatch&lt;/a>と&lt;a class="link" href="https://aws.amazon.com/jp/cloudtrail" target="_blank" rel="noopener"
>CloudTrail&lt;/a>の違いが何かなどをとう問題があります。&lt;/p>
&lt;h3 id="code兄弟">Code兄弟
&lt;/h3>&lt;p>CI/CD関連で問われる問題です。&lt;a class="link" href="https://aws.amazon.com/jp/codepipeline" target="_blank" rel="noopener"
>CodePipeline&lt;/a>、&lt;a class="link" href="https://aws.amazon.com/jp/codedeploy" target="_blank" rel="noopener"
>CodeDeploy&lt;/a>、&lt;a class="link" href="https://aws.amazon.com/jp/codebuild" target="_blank" rel="noopener"
>CodeBuild&lt;/a>、&lt;a class="link" href="https://aws.amazon.com/jp/codestar" target="_blank" rel="noopener"
>CodeStar&lt;/a>に関して問われますが、それぞれの役割をちゃんと理解していれば難しくはないです。&lt;/p>
&lt;p>ただ、機能的に&lt;a class="link" href="https://aws.amazon.com/jp/elasticbeanstalk" target="_blank" rel="noopener"
>Elastic Beanstalk&lt;/a>や、&lt;a class="link" href="https://aws.amazon.com/jp/cloudformation" target="_blank" rel="noopener"
>CloudFormation&lt;/a>と重なる部分があり、デプロイでどれを使うかを選ぶような問題もあったような気がします。これらの違いはちゃんと覚えておく必要があります。&lt;/p>
&lt;p>自分の場合は、以下のイメージを見てだいぶ理解ができたと思います。&lt;/p>
&lt;p>&lt;img src="https://retheviper.github.io/posts/aws-certification-associate-developer/aws_code_services.webp"
width="1842"
height="1036"
srcset="https://retheviper.github.io/posts/aws-certification-associate-developer/aws_code_services_hu46708683b57e7a3356d8f78ac15cd866_33894_480x0_resize_q75_h2_box_2.webp 480w, https://retheviper.github.io/posts/aws-certification-associate-developer/aws_code_services_hu46708683b57e7a3356d8f78ac15cd866_33894_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="AWS Code Sevices"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>
&lt;em>出典：AWS公式サイトトレーニングコース &lt;code>Exam Readiness: AWS Certified Developer - Associate (Digital)&lt;/code>&lt;/em>&lt;/p>
&lt;p>以上の内容は、AWS公式の動画でよく説明してくれているので、一回は受講することをオススメします。&lt;/p>
&lt;h2 id="参考にすると良い情報">参考にすると良い情報
&lt;/h2>&lt;p>他に、ちょっと覚えておくと良さげなものは以下の通りです。&lt;/p>
&lt;h3 id="名前だけは知っておきたいサービス">名前だけは知っておきたいサービス
&lt;/h3>&lt;p>テストで深くは問われないですが、名前だけ(そして何をするものか、大まかなイメージだけ)知っておくといいものとしては、&lt;a class="link" href="https://aws.amazon.com/jp/opsworks" target="_blank" rel="noopener"
>OpsWorks&lt;/a>、&lt;a class="link" href="https://aws.amazon.com/jp/step-functions" target="_blank" rel="noopener"
>Step Functions&lt;/a>、&lt;a class="link" href="https://aws.amazon.com/jp/systems-manager" target="_blank" rel="noopener"
>Systems Manager&lt;/a>のパラメータストアがあります。ただ、こちらまで覚えるのは流石に余裕がないと思います。他も覚えるべきものは山ほどあるので…&lt;/p>
&lt;h3 id="aws-elastic-load-balancer">AWS Elastic Load Balancer
&lt;/h3>&lt;p>&lt;a class="link" href="https://aws.amazon.com/jp/elasticloadbalancing" target="_blank" rel="noopener"
>ELB&lt;/a>についての問題も出ますが、最初はいまいちALB、NLB、CLBのことがわからず苦労をしていたので、以下のことを覚えておくと良いと思います。ELBはクラウドプラクティショナでも問われるものなので、私みたいにAWSの資格が初めてだったり、ELBのことが全くわからない場合に覚えておくといいでしょう。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>特徴&lt;/th>
&lt;th>ALB&lt;/th>
&lt;th>NLB&lt;/th>
&lt;th>CLB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>対応Protocol&lt;/td>
&lt;td>HTTP, HTTPS&lt;/td>
&lt;td>TCP, TLS&lt;/td>
&lt;td>TCP, SSL/TLS, HTTP, HTTPS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>プラットフォーム&lt;/td>
&lt;td>VPC&lt;/td>
&lt;td>VPC&lt;/td>
&lt;td>EC2-Classic, VPC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Health-Check&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CloudWatchマトリックス&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ロギング&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Zonal Fail-Over&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connection Draining&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>同じインスタンスの複数ポートに負荷分散&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WebSockets&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ターゲット(IPアドレス)&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ターゲット(Lambda)&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ロードバランサー削除保護&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>パスベースルーティング&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ホストベースルーティング&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Native HTTP/2&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Idle Connection Timeout設定&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Zond間の負荷分散&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSLオフロード&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SNI(Server Name Indication)&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sticky Session&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>バックエンドサーバ暗号化&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>固定IP&lt;/td>
&lt;td>-&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Elastic IPアドレス&lt;/td>
&lt;td>-&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>送信元IPアドレスを保持&lt;/td>
&lt;td>-&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>リソースベースIAMアクセス許可&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>タグベースのIAM権限&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>スロースタート&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ユーザ認証&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>リダイレクト&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>固定応答&lt;/td>
&lt;td>対応&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="受かったあとは">受かったあとは
&lt;/h2>&lt;p>試験に受かったら、しばらくしていくつかの特典をもらえるよ、というお知らせのメールが届きます。詳細は&lt;a class="link" href="https://aws.amazon.com/jp/certification/benefits" target="_blank" rel="noopener"
>AWS認定のサイト&lt;/a>からも確認できる内容ですが、簡単に紹介しますと以下の特典が提供されます。&lt;/p>
&lt;ul>
&lt;li>AWS認定ロゴのついたグッズを購入できる&lt;/li>
&lt;li>AWS認定資格の模擬試験を一つ購入できるクーポンをもらえる&lt;/li>
&lt;li>&lt;a class="link" href="https://www.linkedin.com" target="_blank" rel="noopener"
>LinkedIn&lt;/a>のAWSコミュニティに入れる&lt;/li>
&lt;li>次の試験が半額になるクーポンをもらえる&lt;/li>
&lt;li>イベントがあったら通知をもらえる&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youracclaim.com" target="_blank" rel="noopener"
>Acclaim&lt;/a>に登録できるデジタルバッジをもらえる&lt;/li>
&lt;/ul>
&lt;p>正直デジタルバッジと模擬試験のクーポンがもらえる以外、使うところがあるかどうかは少々疑問になるライナップではあります。ただ、自腹の場合は確かに次の試験が半額になるのはメリットになるでしょう。自分の場合は会社負担のなっているので、半額でも特にうれしくはないのですが…&lt;/p>
&lt;h2 id="最後に">最後に
&lt;/h2>&lt;p>それで、受験する価値はあったのか？というと、それはあったと思います。暗記に弱く、あまり好きではないので苦労したのは事実ですが、おかげでAWSというサービスをより深く理解することができたと思っています。違うベンダーのクラウドだとしても、やはり大まかなサービスのコンセプトはやはりAWSと変わらないものなので、AzureやGCPなどを使う場合でも十分役立つのではないかと思います。実際、AWSを使うことで得られた知識でオラクルクラウドのVMを有効活用しているところです。&lt;/p>
&lt;p>また、クラウドごとに無料Tierで提供されるサービスはそれぞれ違うのですが、AWSの場合はLambdaとDynamoDBが無料で使えます。なので、この資格を勉強しならが得られた知識で何らかのサーバレスアプリケーションを作ることも可能になったような感覚です。オラクルクラウドとGCPでは無料で使えるVMを提供しているので、この組み合わせだと無料プランだけで立派なサービスを立ち上げることも不可能ではないような気がしますね。おそらく、こういうのも資格に挑戦してなかったら得られなかった知識だっただろうと思っています。&lt;/p>
&lt;p>一つ悩ましいのは、AWSの資格は3年という有効期限があるということです。クラウドは常に変化するサービスであり、続々と新しいサービスが登場するものなので仕方ないものですが、資格を持ってどこに活用するか(例えば、就職や転職に使うなど)はよく考える必要がありそうな気がします。あとは、、他の資格とも共有する部分が多いと思うので、連続して違う資格を早めに取っておいたほうが良さげな感じですね。なので自分もいつかまた、ソリューションアーキテクトなどに挑戦したいと思っています。&lt;/p>
&lt;p>ま、しばらくは疲れたので全然挑戦する気にならないのですが…&lt;/p></description></item></channel></rss>