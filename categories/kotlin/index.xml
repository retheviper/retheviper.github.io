<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kotlin on Korean-man in Tokyo</title><link>https://retheviper.github.io/categories/kotlin/</link><description>Recent content in kotlin on Korean-man in Tokyo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 29 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://retheviper.github.io/categories/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlinでデータの逆転グルーピング</title><link>https://retheviper.github.io/posts/kotlin-reverse-groupping/</link><pubDate>Sat, 29 Jan 2022 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-reverse-groupping/</guid><description>DBを設計する時と、最終的にアプリで活用するデータの形は大きく変わるケースがあります。特に後から機能を付け加えるとそうなりますね。もちろん正</description></item><item><title>Kotlinで和暦を使う</title><link>https://retheviper.github.io/posts/kotlin-japanese-era/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-japanese-era/</guid><description>帳票などで、たまに和暦を処理する必要な時がありますね。例えば元号を表記するとか、和暦の年度を表記するなどの場合があるかと思います。Kotli</description></item><item><title>Kotlinの隠されたコストーその３</title><link>https://retheviper.github.io/posts/kotlin-hidden-cost-3/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-hidden-cost-3/</guid><description>Kotlinの隠されたコスト、その最後の記事となります。今までの記事もかなり興味深かったですが、今回はさらにKotlinならではの機能に触れ</description></item><item><title>Kotlinの隠されたコストーその２</title><link>https://retheviper.github.io/posts/kotlin-hidden-cost-2/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-hidden-cost-2/</guid><description>今回はまたKotlinの隠されたコストに対するポストです。今となってはあまり気にすることはないかも知れませんし（検証は必要そうですが、バージ</description></item><item><title>Kotlinの隠されたコストーその１</title><link>https://retheviper.github.io/posts/kotlin-hidden-cost-1/</link><pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-hidden-cost-1/</guid><description>Kotlinは便利ですが、何が便利かというと代表的に挙げられるものがたくさんのシンタクスシュガーではないかと思います。同じJVM言語のJav</description></item><item><title>Kotlinで書いてみた〜その三〜</title><link>https://retheviper.github.io/posts/kotlin-code-in-my-style-3/</link><pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-code-in-my-style-3/</guid><description>JavaからKotlinに移行したものの立場から言うと、Kotlinはスタンダードライブラリだけでも色々な関数を提供しているので、Javaに</description></item><item><title>Kotlinで書いてみた〜その二〜</title><link>https://retheviper.github.io/posts/kotlin-code-in-my-style-2/</link><pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-code-in-my-style-2/</guid><description>前回に続いて、今回も簡単にKotlinで色々書いてみましたのでその紹介となります。Kotlinではスタンダードライブラリや言語仕様として提供</description></item><item><title>Sequenceは常にいいか</title><link>https://retheviper.github.io/posts/kotlin-collection-and-sequence/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-collection-and-sequence/</guid><description>とある処理を書く方法が色々ある場合は、どれを選んだ方がもっとも良いかと悩ましくなります。こういう場合は、コードの読みやすさやコードの長さ、予</description></item><item><title>KotlinのString実装を覗く〜whitespace編〜</title><link>https://retheviper.github.io/posts/kotlin-whitespace/</link><pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-whitespace/</guid><description>Kotlin(JVM)は、コンパイルした結果がJVMのバイトコードになります。Javaで書かれたライブラリをそのままKotlinで利用できる</description></item><item><title>年月を扱ってみる</title><link>https://retheviper.github.io/posts/kotlin-year-month/</link><pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-year-month/</guid><description>Kotlin(Java)では、java.timeパッケージのクラスで日付や時間を処理することができます。例えばLocalDateTimeやL</description></item><item><title>KotlinでZIP圧縮してみる</title><link>https://retheviper.github.io/posts/kotlin-zip-files/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-zip-files/</guid><description>サーバサイドの機能を作っていると、ファイルダウンロード機能が必要な時があります。ただ、ストレージに保存されてあるファイルをそのまま返すという</description></item><item><title>Kotlinで書いてみた〜その一〜</title><link>https://retheviper.github.io/posts/kotlin-code-in-my-style-1/</link><pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-code-in-my-style-1/</guid><description>こないだはGoに関するポストを作成しましたが、やはり本業はKotlinなので、Kotlinに関しても何かわかったことや閃いたことなどあれば、</description></item><item><title>JavaプログラマーがみたKotlin〜その二〜</title><link>https://retheviper.github.io/posts/kotlin-basics/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-basics/</guid><description>この度は、転職することとなり、仕事で使われる言語もJavaからKotlinに変わることになりました。個人的にKotlinで簡単なSpring</description></item><item><title>Scope Functionはどう使うか</title><link>https://retheviper.github.io/posts/kotlin-scope-function/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-scope-function/</guid><description>KotlinがJavaと区別される特徴といえば色々あるとは思いますが、そのうちの一つとしてあげられるものがScope Functionではない</description></item><item><title>JavaプログラマーがみたKotlin</title><link>https://retheviper.github.io/posts/kotlin-first-impression/</link><pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate><guid>https://retheviper.github.io/posts/kotlin-first-impression/</guid><description>KotlinがAndroidの公式言語になってからもだいぶ長い時間が経ちましたが、まだまだWebアプリケーションの業界ではサーバサイド言語と</description></item></channel></rss>